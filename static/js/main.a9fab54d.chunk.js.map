{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Title/Title.module.css","components/Title/SectionTitle/SectionTitle.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Title/Title.jsx","components/Title/SectionTitle/SectionTitle.jsx","redux/itemsRTK.js","components/ContactForm/ContactForm.js","components/Notification/Notification.js","components/ContactList/contactItem.jsx","redux/contacts-selector.js","components/ContactList/ContactList.js","redux/actions-contacts.js","components/Filter/Filter.js","App.js","redux/default-contacts.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","HeroTitle","title","hero_title","defaultProps","SectionTitle","sectionTitle","section_title","itemsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getItems","query","providesTags","createItem","mutation","newItem","url","method","body","name","number","invalidatesTags","deleteItem","id","useGetItemsQuery","useCreateItemMutation","useDeleteItemMutation","ContactForm","contacts","isLoading","isSuccess","data","useState","setName","setNumber","handleChange","evt","target","value","reset","inputNameId","shortid","generate","inputNumberId","form_overlay","onSubmit","preventDefault","newContact","normalizedName","toLowerCase","find","contact","alert","form","htmlFor","label","type","input","onChange","pattern","required","btn_submit","Notification","message","message_notification","propType","PropTypes","string","isRequired","ContactItem","list_item","href","link_to_call","btn_delete","onClick","func","filterValue","state","filter","ContactList","items","isFetching","isError","console","log","contactItems","filterString","normFilter","includes","getVisibleItems","useSelector","contacts_list","map","addContact","createAction","deleteContact","changeFilter","Filter","dispatch","useDispatch","filter_overlay","filter_label","trim","filter_input","App","defaultContacts","createReducer","payload","_","combineReducers","store","configureStore","reducer","rootReducer","devTools","process","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9fab54d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_delete\":\"ContactList_btn_delete__3EGwL\",\"contacts_list\":\"ContactList_contacts_list__2zgXo\",\"list_item\":\"ContactList_list_item__1VBYH\",\"link_to_call\":\"ContactList_link_to_call__1Dol-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_overlay\":\"Filter_filter_overlay__3z7Jo\",\"filter_label\":\"Filter_filter_label__34sgs\",\"filter_input\":\"Filter_filter_input__LlQpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3ht-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_title\":\"Title_hero_title__3oJ5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_title\":\"SectionTitle_section_title__1_jml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_notification\":\"Notification_message_notification__2DLDj\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Title.module.css\";\r\n\r\nexport default function HeroTitle({ title }) {\r\n  return <h1 className={s.hero_title}>{title}</h1>;\r\n}\r\n\r\nHeroTitle.defaultProps = {\r\n  title: \"Phonebook\",\r\n};\r\n\r\nHeroTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./SectionTitle.module.css\";\r\n\r\nexport default function SectionTitle({ sectionTitle }) {\r\n  return <h2 className={s.section_title}>{sectionTitle}</h2>;\r\n}\r\n\r\nSectionTitle.defaultProps = {\r\n  title: \"Contacts\",\r\n};\r\n\r\nSectionTitle.propTypes = {\r\n  sectionTitle: PropTypes.string,\r\n};\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const itemsApi = createApi({\r\n  reducerPath: \"itemsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://6195170f74c1bd00176c6b65.mockapi.io/api/v1\",\r\n  }),\r\n  tagTypes: [\"Item\"],\r\n  endpoints: (builder) => ({\r\n    getItems: builder.query({\r\n      query: () => `/items`,\r\n      providesTags: [\"Item\"],\r\n    }),\r\n    createItem: builder.mutation({\r\n      query: (newItem) => ({\r\n        url: `/items`,\r\n        method: \"POST\",\r\n        body: {\r\n          name: newItem.name,\r\n          number: newItem.number,\r\n        },\r\n      }),\r\n      invalidatesTags: [\"Item\"],\r\n    }),\r\n    deleteItem: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/items/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Item\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetItemsQuery,\r\n  useCreateItemMutation,\r\n  useDeleteItemMutation,\r\n} = itemsApi;\r\n","import React, { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { useCreateItemMutation, useGetItemsQuery } from \"../../redux/itemsRTK\";\r\n\r\nfunction ContactForm() {\r\n  const [createItem, { isLoading, isSuccess }] = useCreateItemMutation();\r\n  const { data: contacts } = useGetItemsQuery();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const newContact = {\r\n      // id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const normalizedName = name.toLowerCase();\r\n    if (\r\n      contacts.find((contact) => contact.name.toLowerCase() === normalizedName)\r\n    ) {\r\n      alert(`${name} is already in contacts list`);\r\n      return;\r\n    } else if (contacts.find((contact) => contact.number === number)) {\r\n      alert(`${number} is already in contacts list`);\r\n      return;\r\n    } else {\r\n      createItem(newContact);\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const inputNameId = shortid.generate();\r\n  const inputNumberId = shortid.generate();\r\n\r\n  return (\r\n    <div className={s.form_overlay}>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label htmlFor={inputNameId} className={s.label}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            className={s.input}\r\n            onChange={handleChange}\r\n            value={name}\r\n            name=\"name\"\r\n            id={inputNameId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={inputNumberId} className={s.label}>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            className={s.input}\r\n            onChange={handleChange}\r\n            value={number}\r\n            name=\"number\"\r\n            id={inputNumberId}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" className={s.btn_submit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message_notification}>{message}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: \"No contacts \",\r\n};\r\n\r\nNotification.propType = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { MdCall, MdOutlineDeleteOutline } from \"react-icons/md\";\r\n\r\nexport default function ContactItem({ id, name, number, deleteItem }) {\r\n  return (\r\n    <li key={id} className={s.list_item}>\r\n      <p>{name}</p>\r\n      <a href=\"tel:{number}\" className={s.link_to_call}>\r\n        <MdCall />\r\n        {number}\r\n      </a>\r\n      <button\r\n        type=\"button\"\r\n        className={s.btn_delete}\r\n        onClick={() => deleteItem(id)}\r\n      >\r\n        <MdOutlineDeleteOutline />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propType = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteItem: PropTypes.func,\r\n};\r\n","export const getContactItems = (state) => state.contacts.items;\r\nexport const filterValue = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const allContacts = getContactItems(state);\r\n  const filteredValue = filterValue(state);\r\n\r\n  let normFilter = filteredValue.toLowerCase();\r\n\r\n  if (filterValue) {\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normFilter)\r\n    );\r\n  }\r\n  return allContacts;\r\n};\r\n//for ContactList\r\nexport const getVisibleItems = (data, filterString) => {\r\n  let normFilter = filterString.toLowerCase();\r\n  if (data) {\r\n    return data.filter(({ name }) => name.toLowerCase().includes(normFilter));\r\n  }\r\n  return data;\r\n};\r\n\r\n// //for ContactForm\r\n// export const checkData = (newItem, data) => {\r\n//   const { name, number } = newItem;\r\n//    const normalizedName = name.toLowerCase();\r\n//     if (\r\n//       data.find((contact) => contact.name.toLowerCase() === normalizedName)\r\n//     ) {\r\n//       alert(`${name} is already in contacts list`);\r\n//       return;\r\n//     } else if (data.find((contact) => contact.number === number)) {\r\n//       alert(`${number} is already in contacts list`);\r\n//       return;\r\n//     } else {\r\n//       createItem(newItem);\r\n//     }\r\n// };\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport ContactItem from \"./contactItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filterValue, getVisibleItems } from \"../../redux/contacts-selector\";\r\nimport { useDeleteItemMutation, useGetItemsQuery } from \"../../redux/itemsRTK\";\r\n\r\nexport default function ContactList() {\r\n  const { data: items, isFetching, isError } = useGetItemsQuery();\r\n  const [deleteItem] = useDeleteItemMutation();\r\n  console.log(items);\r\n  const filter = useSelector(filterValue);\r\n  const contactItems = getVisibleItems(items, filter);\r\n\r\n  return (\r\n    <>\r\n      {isFetching && <p>get data from server...</p>}\r\n      {isError && <p>Sorry!</p>}\r\n      {contactItems ? (\r\n        <>\r\n          <ul className={s.contacts_list}>\r\n            {contactItems.map(({ id, name, number }) => (\r\n              <ContactItem\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n                deleteItem={deleteItem}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"ADD/contact\");\r\nexport const deleteContact = createAction(\"DELETE/contact\");\r\nexport const changeFilter = createAction(\"FILTER_CHANGE/contact\");\r\n\r\n//pending\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\n//fulfilled\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\n//rejected\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { changeFilter } from \"../../redux/actions-contacts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterValue } from \"../../redux/contacts-selector\";\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(filterValue);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filter_overlay}>\r\n      <label className={s.filter_label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={({ target }) => dispatch(changeFilter(target.value.trim()))}\r\n          className={s.filter_input}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   filter: PropTypes.string,\r\n//   changeFilter: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     filter: state.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onChangeFilter: (e) => dispatch(changeFilter(e.target.value.trim())),\r\n//   };\r\n// };\r\n","import \"./App.css\";\r\n// import { connect } from \"react-redux\";\r\n\r\nimport Container from \"./components/Container/Container\";\r\nimport HeroTitle from \"./components/Title/Title\";\r\nimport SectionTitle from \"./components/Title/SectionTitle/SectionTitle\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <HeroTitle title=\"Phonebook\" />\r\n      <ContactForm />\r\n      <>\r\n        <SectionTitle sectionTitle=\"Contacts\" />\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const defaultContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\nexport default defaultContacts;\r\n","// import actionTypes from \"./actions-type\";\r\nimport { addContact, deleteContact, changeFilter } from \"./actions-contacts\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport defaultContacts from \"./default-contacts\";\r\n\r\nconst contacts = {\r\n  items: [...defaultContacts],\r\n  filter: \"\",\r\n};\r\n\r\n//?toolkit\r\nconst items = createReducer(contacts.items, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(contacts.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport rootReducer from \"./contacts-reducer\";\r\nimport { itemsApi } from \"./itemsRTK\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n    [itemsApi.reducerPath]: itemsApi.reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    itemsApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\"; //, persistor\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// console.log(store);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_overlay\":\"ContactForm_form_overlay__3mXj0\",\"form\":\"ContactForm_form__3ZzR5\",\"input\":\"ContactForm_input__8CFc_\",\"label\":\"ContactForm_label__3opEH\",\"btn_submit\":\"ContactForm_btn_submit__KxvHI\"};"],"sourceRoot":""}